{"version":3,"sources":["/Users/vzhuravlev/Projects/react-decision-matrix/src/DecisionMatrix/DecisionMatrix.styles.ts","/Users/vzhuravlev/Projects/react-decision-matrix/src/DecisionMatrix/DecisionMatrix.tsx","/Users/vzhuravlev/Projects/react-decision-matrix/src/DecisionMatrix/DecisionMatrix.mdx"],"names":["DecisionMatrix","TR","TH","props","isCursor","TD","isMin","isMax","Thead","Tbody","Table","Input","Add","DataShow","Data","TDEmpty","String","fromCharCode","defaultCriteria","criteria","defaultOptions","options","Array","isArray","length","useState","setCriteria","setOptions","isShow","setShow","criteriaIndex","optionIndex","criteriaType","clicked","setClicked","useEffect","totals","fill","TRForBody","map","item","name","weighting","key","onDoubleClick","defaultValue","autoFocus","onBlur","event","target","value","slice","onKeyDown","Number","option","values","total","min","Math","max","isCoincidesMinAndMax","colSpan","onClick","_","index","JSON","stringify","undefined","defaultProps","displayName","layoutProps","MDXLayout","MDXContent","components","mdxType","of","__position","__code","__scope","this","Playground","Props","__codesandbox","isMDXComponent"],"mappings":"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","file":"static/js/src-decision-matrix-decision-matrix.e8b8d72d.js","sourcesContent":["import styled from '@emotion/styled';\n\nimport * as T from './DecisionMatrix.types';\n\nexport const DecisionMatrix = styled.div``;\n\nexport const TR = styled.tr``;\n\nexport const TH = styled.th<T.THProps>`\n  position: relative;\n  background: #f5f6f7;\n  min-height: 35px;\n  border: 1px solid #13161f;\n  cursor: ${props => (props.isCursor ? 'pointer' : 'default')};\n`;\n\nexport const TD = styled.td<T.TDProps>`\n  position: relative;\n  min-height: 35px;\n  border-top: 1px solid #e1e1e1;\n  border-left: 1px solid #e1e1e1;\n  background-color: ${props => {\n    if (props.isMin) {\n      return '#ffd4d4';\n    }\n\n    if (props.isMax) {\n      return '#e2ffe2';\n    }\n\n    return 'transparent';\n  }};\n  text-align: center;\n  cursor: ${props => (props.isCursor ? 'pointer' : 'default')};\n\n  &:nth-of-type(2n + 1) {\n    border-left: 1px solid #13161f;\n  }\n\n  &:first-of-type {\n    border-right: 1px solid #13161f;\n  }\n`;\n\nexport const Thead = styled.thead`\n  ${TD} {\n    border: 1px solid #13161f;\n  }\n`;\n\nexport const Tbody = styled.tbody`\n  ${TR}:not(:first-of-type):hover {\n    background-color: #f5f6f7;\n  }\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  overflow: hidden;\n  color: #13161f;\n  border: 1px solid #13161f;\n  border-collapse: collapse;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: calc(100% - 30px);\n  max-width: 100px;\n  margin: 5px 15px;\n  text-align: center;\n  font-size: 14px;\n  border-top: none;\n  border-right: none;\n  border-left: none;\n  border-bottom: 1px solid #ced4de;\n  background-color: transparent;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const Add = styled.span`\n  color: #e1e1e1;\n`;\n\nexport const DataShow = styled.p`\n  display: inline-block;\n  color: #03a9f4;\n  cursor: pointer;\n  border-bottom: 1px dashed #03a9f4;\n`;\n\nexport const Data = styled.div`\n  display: flex;\n  width: 100%;\n\n  pre {\n    width: 42%;\n    padding: 10px;\n    margin-right: 3%;\n    background-color: #f5f6f7;\n    border-radius: 8px;\n    overflow-y: hidden;\n    overflow-x: auto;\n\n    &:last-of-type {\n      width: 10%;\n      margin-right: 0;\n    }\n  }\n`;\n","import React, {\n  Fragment,\n  useState,\n  useEffect,\n  FocusEvent,\n  KeyboardEvent\n} from 'react';\n\nimport * as T from './DecisionMatrix.types';\nimport * as S from './DecisionMatrix.styles';\n\nfunction TDEmpty() {\n  return <S.TD>{String.fromCharCode(160)}</S.TD>;\n}\n\nfunction DecisionMatrix(props: T.DecisionMatrixProps) {\n  const { criteria: defaultCriteria, options: defaultOptions } = props;\n\n  if (!Array.isArray(defaultCriteria) || defaultCriteria.length === 0) {\n    return null;\n  }\n  if (!Array.isArray(defaultOptions) || defaultOptions.length === 0) {\n    return null;\n  }\n\n  const [criteria, setCriteria] = useState(defaultCriteria);\n  const [options, setOptions] = useState(defaultOptions);\n\n  const [isShow, setShow] = useState(false);\n\n  const [clicked, setClicked] = useState<{\n    optionIndex: number | null;\n    criteriaIndex: number | null;\n    criteriaType: 'name' | 'weighting' | 'score' | null;\n  }>({\n    criteriaIndex: null,\n    optionIndex: null,\n    criteriaType: null\n  });\n\n  useEffect(() => {}, [criteria, options]);\n\n  const totals: number[] = new Array(options.length).fill(0);\n\n  const TRForBody = criteria.map((item, criteriaIndex) => {\n    const { name, weighting } = item;\n\n    return (\n      <S.TR key={criteriaIndex + 1}>\n        <S.TD\n          isCursor\n          onDoubleClick={() => {\n            setClicked({ ...clicked, criteriaIndex, criteriaType: 'name' });\n          }}\n        >\n          {clicked.criteriaIndex === criteriaIndex &&\n          clicked.criteriaType === 'name' ? (\n            <S.Input\n              defaultValue={name}\n              autoFocus\n              onBlur={(event: FocusEvent<HTMLInputElement>) => {\n                if (event.target.value) {\n                  criteria[criteriaIndex].name = event.target.value;\n                } else {\n                  setCriteria(\n                    criteriaIndex > 0\n                      ? [\n                          ...criteria.slice(0, criteriaIndex),\n                          ...criteria.slice(criteriaIndex + 1, criteria.length)\n                        ]\n                      : [...criteria.slice(1, criteria.length)]\n                  );\n                }\n                setClicked({\n                  ...clicked,\n                  criteriaIndex: null,\n                  criteriaType: null\n                });\n              }}\n              onKeyDown={(event: KeyboardEvent<HTMLInputElement>) => {\n                if (event.key !== 'Enter') return;\n\n                const { value } = event.target as HTMLInputElement;\n\n                if (value && value.length) {\n                  criteria[criteriaIndex].name = value;\n                } else {\n                  setCriteria(\n                    criteriaIndex > 0\n                      ? [\n                          ...criteria.slice(0, criteriaIndex),\n                          ...criteria.slice(criteriaIndex + 1, criteria.length)\n                        ]\n                      : [...criteria.slice(1, criteria.length)]\n                  );\n                }\n                setClicked({\n                  ...clicked,\n                  criteriaIndex: null,\n                  criteriaType: null\n                });\n              }}\n            />\n          ) : (\n            name\n          )}\n        </S.TD>\n        <S.TD\n          isCursor\n          onDoubleClick={() => {\n            setClicked({\n              ...clicked,\n              criteriaIndex,\n              criteriaType: 'weighting'\n            });\n          }}\n        >\n          {clicked.criteriaIndex === criteriaIndex &&\n          clicked.criteriaType === 'weighting' ? (\n            <S.Input\n              defaultValue={String(weighting)}\n              autoFocus\n              onBlur={(event: FocusEvent<HTMLInputElement>) => {\n                // todo: real-time update\n                criteria[criteriaIndex].weighting = Number(event.target.value);\n                setClicked({\n                  ...clicked,\n                  criteriaIndex: null,\n                  criteriaType: null\n                });\n              }}\n              onKeyDown={(event: KeyboardEvent<HTMLInputElement>) => {\n                if (event.key !== 'Enter') return;\n\n                // todo: real-time update\n                criteria[criteriaIndex].weighting = Number(\n                  (event.target as HTMLInputElement).value\n                );\n                setClicked({\n                  ...clicked,\n                  criteriaIndex: null,\n                  criteriaType: null\n                });\n              }}\n            />\n          ) : (\n            weighting\n          )}\n        </S.TD>\n        {options.map((option, optionIndex) => {\n          const value = option.values[criteriaIndex] || 0;\n\n          const total = value * weighting;\n\n          totals[optionIndex] += total;\n\n          return (\n            <Fragment key={`${criteriaIndex}_${optionIndex}`}>\n              <S.TD\n                isCursor\n                key={optionIndex}\n                onDoubleClick={() => {\n                  setClicked({\n                    optionIndex,\n                    criteriaIndex,\n                    criteriaType: 'score'\n                  });\n                }}\n              >\n                {clicked.optionIndex === optionIndex &&\n                clicked.criteriaIndex === criteriaIndex &&\n                clicked.criteriaType === 'score' ? (\n                  <S.Input\n                    defaultValue={String(value)}\n                    autoFocus\n                    onBlur={(event: FocusEvent<HTMLInputElement>) => {\n                      // todo: real-time update\n                      // eslint-disable-next-line no-param-reassign\n                      option.values[criteriaIndex] = Number(event.target.value);\n                      setClicked({\n                        optionIndex: null,\n                        criteriaIndex: null,\n                        criteriaType: null\n                      });\n                    }}\n                    onKeyDown={(event: KeyboardEvent<HTMLInputElement>) => {\n                      if (event.key !== 'Enter') return;\n\n                      // todo: real-time update\n                      // eslint-disable-next-line no-param-reassign\n                      option.values[criteriaIndex] = Number(\n                        (event.target as HTMLInputElement).value\n                      );\n\n                      setClicked({\n                        optionIndex: null,\n                        criteriaIndex: null,\n                        criteriaType: null\n                      });\n                    }}\n                  />\n                ) : (\n                  value\n                )}\n              </S.TD>\n              <S.TD>{total}</S.TD>\n            </Fragment>\n          );\n        })}\n        <TDEmpty />\n        <TDEmpty />\n      </S.TR>\n    );\n  });\n\n  const min = Math.min(...totals);\n  const max = Math.max(...totals);\n  const isCoincidesMinAndMax = min === max;\n\n  return (\n    <S.DecisionMatrix>\n      <S.Table>\n        <S.Thead>\n          <S.TR>\n            <TDEmpty />\n            <TDEmpty />\n            <S.TH colSpan={options.length * 2 + 2}>OPTIONS</S.TH>\n          </S.TR>\n          <S.TR>\n            <S.TH>Criteria</S.TH>\n            <S.TH>Weighting</S.TH>\n            {options.map((option, optionIndex) => (\n              <S.TH\n                isCursor\n                key={option.name}\n                colSpan={2}\n                onDoubleClick={() => setClicked({ ...clicked, optionIndex })}\n              >\n                {clicked.optionIndex === optionIndex &&\n                !clicked.criteriaType ? (\n                  <S.Input\n                    defaultValue={option.name}\n                    autoFocus\n                    onBlur={(event: FocusEvent<HTMLInputElement>) => {\n                      if (event.target.value.length) {\n                        options[optionIndex].name = event.target.value;\n                      } else {\n                        setOptions(\n                          optionIndex > 0\n                            ? [\n                                ...options.slice(0, optionIndex),\n                                ...options.slice(\n                                  optionIndex + 1,\n                                  options.length\n                                )\n                              ]\n                            : [...options.slice(1, options.length)]\n                        );\n                      }\n                      setClicked({\n                        ...clicked,\n                        optionIndex: null\n                      });\n                    }}\n                    onKeyDown={(event: KeyboardEvent<HTMLInputElement>) => {\n                      if (event.key !== 'Enter') return;\n\n                      const { value } = event.target as HTMLInputElement;\n\n                      if (value && value.length) {\n                        options[optionIndex].name = value;\n                      } else {\n                        setOptions(\n                          optionIndex > 0\n                            ? [\n                                ...options.slice(0, optionIndex),\n                                ...options.slice(\n                                  optionIndex + 1,\n                                  options.length\n                                )\n                              ]\n                            : [...options.slice(1, options.length)]\n                        );\n                      }\n                      setClicked({\n                        ...clicked,\n                        optionIndex: null\n                      });\n                    }}\n                  />\n                ) : (\n                  option.name\n                )}\n              </S.TH>\n            ))}\n            <S.TH\n              isCursor\n              colSpan={2}\n              onClick={() => {\n                setOptions([\n                  ...options,\n                  {\n                    name: 'New Option',\n                    values: new Array(criteria.length).fill(1)\n                  }\n                ]);\n              }}\n            >\n              <S.Add>Add option</S.Add>\n            </S.TH>\n          </S.TR>\n        </S.Thead>\n\n        <tfoot>\n          <S.TR>\n            <S.TD\n              isCursor\n              onClick={() => {\n                setCriteria([\n                  ...criteria,\n                  { name: 'New criteria', weighting: 1 }\n                ]);\n              }}\n            >\n              <S.Add>Add criteria</S.Add>\n            </S.TD>\n            <TDEmpty />\n            {options.map((_, index) => (\n              <Fragment key={index}>\n                <TDEmpty />\n                <TDEmpty />\n              </Fragment>\n            ))}\n            <TDEmpty />\n            <TDEmpty />\n          </S.TR>\n          <S.TR>\n            <TDEmpty />\n            <S.TD>TOTAL: </S.TD>\n            {totals.map((value, index) => (\n              <Fragment key={index}>\n                <TDEmpty />\n                <S.TD\n                  isMin={!isCoincidesMinAndMax && value === min}\n                  isMax={!isCoincidesMinAndMax && value === max}\n                >\n                  {value}\n                </S.TD>\n              </Fragment>\n            ))}\n            <TDEmpty />\n            <TDEmpty />\n          </S.TR>\n        </tfoot>\n\n        <S.Tbody>\n          <S.TR>\n            <TDEmpty />\n            <TDEmpty />\n            {options.map((_, index) => (\n              <Fragment key={index}>\n                <S.TH>Score</S.TH>\n                <S.TH>Total</S.TH>\n              </Fragment>\n            ))}\n            <S.TH>\n              <S.Add>Score</S.Add>\n            </S.TH>\n            <S.TH>\n              <S.Add>Total</S.Add>\n            </S.TH>\n          </S.TR>\n          {TRForBody}\n        </S.Tbody>\n      </S.Table>\n      <S.DataShow onClick={() => setShow(!isShow)}>\n        {isShow ? 'Скрыть данные' : 'Показать данные'}\n      </S.DataShow>\n      {isShow && (\n        <S.Data>\n          <pre>\n            Options:\n            <br />\n            {JSON.stringify(options, undefined, 2)}\n          </pre>\n          <pre>\n            Criteria:\n            <br />\n            {JSON.stringify(criteria, undefined, 2)}\n          </pre>\n          <pre>\n            Totals:\n            <br />\n            {JSON.stringify(totals, undefined, 2)}\n          </pre>\n        </S.Data>\n      )}\n    </S.DecisionMatrix>\n  );\n}\n\nDecisionMatrix.defaultProps = {\n  criteria: [\n    {\n      name: 'First criterion',\n      weighting: 5\n    },\n    {\n      name: 'Second criterion',\n      weighting: 5\n    }\n  ],\n  options: [\n    {\n      name: 'First option',\n      values: [1, 2]\n    },\n    {\n      name: 'Second option',\n      values: [4, 5]\n    }\n  ]\n};\n\nDecisionMatrix.displayName = 'DecisionMatrix';\n\nexport default DecisionMatrix;\n","/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport DecisionMatrix from './';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"decision-matrix\"\n    }}>{`Decision Matrix`}</h1>\n    <p>{`Info about Decision Matrix`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={DecisionMatrix} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<DecisionMatrix />'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      DecisionMatrix\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <DecisionMatrix mdxType=\"DecisionMatrix\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"work\"\n    }}>{`Work`}</h2>\n    <Playground __position={2} __code={'<DecisionMatrix\\n  criteria={[\\n    {\\n      name: \\'Зарплата\\',\\n      weighting: 5,\\n    },\\n    {\\n      name: \\'Проект\\',\\n      weighting: 5,\\n    },\\n    {\\n      name: \\'Команда\\',\\n      weighting: 4,\\n    },\\n    {\\n      name: \\'Премии\\',\\n      weighting: 3,\\n    },\\n    {\\n      name: \\'Конференции\\',\\n      weighting: 2,\\n    },\\n    {\\n      name: \\'Английский\\',\\n      weighting: 3,\\n    },\\n    {\\n      name: \\'ДМС\\',\\n      weighting: 2,\\n    },\\n    {\\n      name: \\'Дорога\\',\\n      weighting: 1,\\n    },\\n    {\\n      name: \\'Маленькое кол-во встреч\\',\\n      weighting: 2,\\n    },\\n    {\\n      name: \\'Поработать из дома\\',\\n      weighting: 3,\\n    },\\n    {\\n      name: \\'Где можно \\\"осесть\\\"\\\"\\',\\n      weighting: 1,\\n    },\\n    {\\n      name: \\'Изменить квалификацию\\',\\n      weighting: 2,\\n    },\\n    {\\n      name: \\'Корпоративы\\',\\n      weighting: 2,\\n    },\\n    {\\n      name: \\'Обучение\\',\\n      weighting: 2,\\n    },\\n    {\\n      name: \\'Офис\\',\\n      weighting: 3,\\n    },\\n    {\\n      name: \\'Оборудование\\',\\n      weighting: 4,\\n    },\\n  ]}\\n  options={[\\n    {\\n      name: \\'Work #1\\',\\n      values: [],\\n    },\\n    {\\n      name: \\'Work #1\\',\\n      values: [],\\n    },\\n  ]}\\n/>'} __scope={{\n      props: this ? this.props : props,\n      Playground,\n      Props,\n      DecisionMatrix\n    }} __codesandbox={``} mdxType=\"Playground\">\n  <DecisionMatrix criteria={[{\n        name: 'Зарплата',\n        weighting: 5\n      }, {\n        name: 'Проект',\n        weighting: 5\n      }, {\n        name: 'Команда',\n        weighting: 4\n      }, {\n        name: 'Премии',\n        weighting: 3\n      }, {\n        name: 'Конференции',\n        weighting: 2\n      }, {\n        name: 'Английский',\n        weighting: 3\n      }, {\n        name: 'ДМС',\n        weighting: 2\n      }, {\n        name: 'Дорога',\n        weighting: 1\n      }, {\n        name: 'Маленькое кол-во встреч',\n        weighting: 2\n      }, {\n        name: 'Поработать из дома',\n        weighting: 3\n      }, {\n        name: 'Где можно \"осесть\"\"',\n        weighting: 1\n      }, {\n        name: 'Изменить квалификацию',\n        weighting: 2\n      }, {\n        name: 'Корпоративы',\n        weighting: 2\n      }, {\n        name: 'Обучение',\n        weighting: 2\n      }, {\n        name: 'Офис',\n        weighting: 3\n      }, {\n        name: 'Оборудование',\n        weighting: 4\n      }]} options={[{\n        name: 'Work #1',\n        values: []\n      }, {\n        name: 'Work #1',\n        values: []\n      }]} mdxType=\"DecisionMatrix\" />\n    </Playground>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}